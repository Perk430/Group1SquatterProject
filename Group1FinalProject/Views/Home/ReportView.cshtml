@{
    ViewBag.Title = "ReportView";
}


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<html>
<head>

</head>
<body>


    <br />
    <h3>Report A Squatter</h3>
    <br />

    <p>
        If you believe a property is being occupied by a squatter, please enter the address<br />
        below of the property. This will then flag the address in our database. Property owners <br />
        will have the ability to check if their property has a squatter, allowing them take <br />
        neccessary action.
    </p>
    <br />
    <p>
        If you are a homeowner, please visit our Homeowner's page to utilize our search tool and access <br />
        our squatter database.
    </p>
    <form name="input" form action="/API/GetONBData" method="post">
        Street: <i>(i.e. 1245 Example St )</i><br />
        <input type="text" name="Address1" id="Address1"><br>
        City, State:<br>
        <input type="text" name="Address2" id="Address2">
        <br />
        <br />
        <input type="submit" value="Search">
    </form>
    <br />
    @if (ViewBag.Message != null)
    { 
        <b>    @ViewBag.Message</b>
    }
    <u>SEARCH RESULTS:</u>
    <br />
    <b>  @ViewBag.oneLine</b>

    @ViewBag.absenteeind

    @ViewBag.propclass

    @ViewBag.propsubtype
    <br />
    <br />

    <center>
        <input id="submit" type="button" value="Place Marker">
        <input id="address" type="hidden" value="@ViewBag.oneLine">
        <div> <font color="blue">   IF THE ADDRESS ABOVE HAS A SQUATTER, CLICK <b>"PLACE MARKER"</b> TO REPORT AND PLACE MARKER ON MAP</font></div>
        <h4>Map of Reported Squatters</h4> 
        <div id="map" style="width:500px;height:500px;"></div><div>
            <br />
            <br />
            <br />
        </div>
        <br />
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
        <meta charset="utf-8">


        </center>
            <script type="text/javascript">

                var modelarray = new Array();
                modelarray = @Html.Raw(Json.Encode(ViewBag.Locations));

                for (var i = 0; i < modelarray.length; i++)
                {
                    document.write(modelarray[i].GeoLoc)
                }


                function initMap()
                {
                    var modelarray = new Array();
                    modelarray = @Html.Raw(Json.Encode(ViewBag.Locations));

                    var map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 4,
                        center: { lat: 42.331429, lng: -83.045753 }
                    });

                    var PreLoadgeocoder = new google.maps.Geocoder();
                    var geocoder = new google.maps.Geocoder();

                    for (var i = 0; i < modelarray.length; i++)
                    {
                        var location = modelarray[i].GeoLoc;
                        PreGeocodeAddress(location, PreLoadgeocoder, map);
                    }

                    document.getElementById('submit').addEventListener('click', function () {
                        geocodeAddress(geocoder, map);
                    });
                }

                function geocodeAddress(geocoder, resultsMap)
                {
                    var address = document.getElementById('address').value;
                    geocoder.geocode({ 'address': address }, function (results, status) {
                        if (status === 'OK')
                        {
                            resultsMap.setCenter(results[0].geometry.location);
                            var marker = new google.maps.Marker({
                                map: resultsMap,
                                position: results[0].geometry.location
                            })
                            PassData(address);
                        } else
                        {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                    });
                }

                function PreGeocodeAddress(location, PreLoadgeocoder, resultsMap)
                {
                    var address = location;

                    PreLoadgeocoder.geocode({ 'address': address }, function (results, status) {
                        if (status === 'OK')
                        {
                            resultsMap.setCenter(results[0].geometry.location);
                            var marker = new google.maps.Marker({
                                map: resultsMap,
                                position: results[0].geometry.location
                            })
                        } else
                        {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                    });
                }

                function PassData(address) {
                    //create javascript object
                    var model = new Object();
                    model.GeoLoc = address;

                    jQuery.ajax({
                        type: "POST",
                        url: "@Url.Action("../MAP/SendData")",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ coordinates: model }),
                        success: function (data) {
                            alert(data);
                        },
                        failure: function (errMsg) {
                            alert(errMsg);
                        }
                    });
                }
            </script>
            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD3uXZRFB9AlWQe-ZoMa4tDzgU_l_XUB_0&callback=initMap">
            </script>

            <br />
            <br />

</body>


</html>


